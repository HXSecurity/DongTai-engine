# This is a basic workflow to help you get started with Actions

name: Deploy DongTai Engine To AWS

on:
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-engine-and-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: start-build
        uses: joelwmale/webhook-action@master
        with:
          url: ${{ secrets.WEBHOOK_URL }}
          body: '{"msg_type": "interactive","card": {"config": {"wide_screen_mode": true,"enable_forward": true},"elements": [{"tag": "div","text": {"content": "状态：项目${{github.repository}}构建开始\n分支：${{github.ref}}\nMessage: ${{ github.event.pull_request.title }}\n流程：${{github.workflow}}\n构建编号：${{github.run_number}}\n触发事件：${{github.event_name}}\n提交人：${{github.actor}}\nSHA-1：${{github.sha}}\n","tag": "lark_md"}}]}}'

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Set up Python 3.7
        uses: actions/checkout@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Install TEST dependencies
        if: github.event.action == 'opened' || (github.event.action == 'closed' && github.event.pull_request.merged == false)
        run: |
          wget https://huoqi-public.oss-cn-beijing.aliyuncs.com/iast/dongtai-models-test-1.0.tar.gz -O /tmp/dongtai-models-1.0.tar.gz
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install /tmp/dongtai-models-1.0.tar.gz

      - name: Install PROD dependencies
        if: github.event.action == 'closed' && github.event.pull_request.merged == true
        run: |
          wget https://huoqi-public.oss-cn-beijing.aliyuncs.com/iast/dongtai-models-1.0.tar.gz -O /tmp/dongtai-models-1.0.tar.gz
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install /tmp/dongtai-models-1.0.tar.gz

      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Django Testing project
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          cp conf/config.ini.example conf/config.ini
          python3 manage.py test

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ALIYUN_REGISTRY }}
          username: ${{ secrets.ALIYUN_DOCKERHUB_USER }}
          password: ${{ secrets.ALIYUN_DOCKERHUB_PASSWORD }}

      - name: Build and push To AliYun TEST
        if: github.event.action == 'opened' || (github.event.action == 'closed' && github.event.pull_request.merged == false)
        uses: docker/build-push-action@v2
        with:
          context: .
          file: DockerfileTest
          push: true
          tags: "registry.cn-beijing.aliyuncs.com/secnium/iast-saas-engine-test:latest,registry.cn-beijing.aliyuncs.com/secnium/iast-saas-engine-test:1.0.${{github.run_number}},"

      - name: Build and push To AliYun PROD
        if: github.event.action == 'closed' && github.event.pull_request.merged == true
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: "registry.cn-beijing.aliyuncs.com/secnium/iast-saas-engine:latest,registry.cn-beijing.aliyuncs.com/secnium/iast-saas-engine:1.0.${{github.run_number}},registry.cn-beijing.aliyuncs.com/huoxian_pub/dongtai-engine:latest,"

      - uses: actions/checkout@master
      - name: deploy Engine to PROD cluster
        if: github.event.action == 'closed' && github.event.pull_request.merged == true
        uses: wahyd4/kubectl-helm-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: |
            find deploy/deploy-eks-iast-saas-engine-prod.yml -type f -exec sed -i 's/VERSION/1.0.${{github.run_number}}/g' {} \;
            ls deploy/deploy-eks-iast-saas-engine-prod.yml | xargs -I {} kubectl apply -f {}

      - uses: actions/checkout@master
      - name: deploy Engine to TEST cluster
        if: github.event.action == 'opened' || (github.event.action == 'closed' && github.event.pull_request.merged == false)
        uses: wahyd4/kubectl-helm-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_TEST_DATA }}
        with:
          args: |
            find deploy/deploy-eks-iast-saas-engine-test.yml -type f -exec sed -i 's/VERSION/1.0.${{github.run_number}}/g' {} \;
            ls deploy/deploy-eks-iast-saas-engine-test.yml | xargs -I {} kubectl apply -f {}

      - uses: actions/checkout@master
      - name: deploy Engine Task to PROD cluster
        if: github.event.action == 'closed' && github.event.pull_request.merged == true
        uses: wahyd4/kubectl-helm-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: |
            find deploy/deploy-eks-iast-saas-engine-task-prod.yml -type f -exec sed -i 's/VERSION/1.0.${{github.run_number}}/g' {} \;
            ls deploy/deploy-eks-iast-saas-engine-task-prod.yml | xargs -I {} kubectl apply -f {}

      - uses: actions/checkout@master
      - name: deploy Engine Task to TEST cluster
        if: github.event.action == 'opened' || (github.event.action == 'closed' && github.event.pull_request.merged == false)
        uses: wahyd4/kubectl-helm-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_TEST_DATA }}
        with:
          args: |
            find deploy/deploy-eks-iast-saas-engine-task-test.yml -type f -exec sed -i 's/VERSION/1.0.${{github.run_number}}/g' {} \;
            ls deploy/deploy-eks-iast-saas-engine-task-test.yml | xargs -I {} kubectl apply -f {}

      - name: finish build
        uses: joelwmale/webhook-action@master
        with:
          url: ${{ secrets.WEBHOOK_URL }}
          body: '{"msg_type": "interactive","card": {"config": {"wide_screen_mode": true,"enable_forward": true},"elements": [{"tag": "div","text": {"content": "状态：项目${{github.repository}}构建成功\n分支：${{github.ref}}\nMessage: ${{ github.event.pull_request.title }}\n流程：${{github.workflow}}\n构建编号：${{github.run_number}}\n触发事件：${{github.event_name}}\n提交人：${{github.actor}}\nSHA-1：${{github.sha}}\n","tag": "lark_md"}}]}}'
